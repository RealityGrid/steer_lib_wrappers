/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.33
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.realitygrid.steering;

class ReG_Steer implements ReG_SteerConstants {
  public static void Steering_enable(int EnableSteer) {
    ReG_SteerJNI.Steering_enable(EnableSteer);
  }

  public static int Steering_initialize(String AppName, int[] NumSupportedCmds) {
    return ReG_SteerJNI.Steering_initialize(AppName, NumSupportedCmds);
  }

  public static int Register_IOType(String IOLabel, int direction, int IOFrequency, SWIGTYPE_p_int iotypehandle) {
    return ReG_SteerJNI.Register_IOType(IOLabel, direction, IOFrequency, SWIGTYPE_p_int.getCPtr(iotypehandle));
  }

  public static int Enable_IOTypes_on_registration(int toggle) {
    return ReG_SteerJNI.Enable_IOTypes_on_registration(toggle);
  }

  public static int Disable_IOType(int IOType) {
    return ReG_SteerJNI.Disable_IOType(IOType);
  }

  public static int Enable_IOType(int IOType) {
    return ReG_SteerJNI.Enable_IOType(IOType);
  }

  public static int Enable_IOType_acks(int IOType) {
    return ReG_SteerJNI.Enable_IOType_acks(IOType);
  }

  public static int Disable_IOType_acks(int IOType) {
    return ReG_SteerJNI.Disable_IOType_acks(IOType);
  }

  public static int Register_param(String ParamLabel, int ParamSteerable, SWIGTYPE_p_void ParamPtr, int ParamType, String ParamMinimum, String ParamMaximum) {
    return ReG_SteerJNI.Register_param(ParamLabel, ParamSteerable, SWIGTYPE_p_void.getCPtr(ParamPtr), ParamType, ParamMinimum, ParamMaximum);
  }

  public static int Steering_control(int SeqNum, SWIGTYPE_p_int NumSteerParams, String[] SteerParamLabels, SWIGTYPE_p_int NumSteerCommands, int[] SteerCommands, String[] SteerCmdParams) {
    return ReG_SteerJNI.Steering_control(SeqNum, SWIGTYPE_p_int.getCPtr(NumSteerParams), SteerParamLabels, SWIGTYPE_p_int.getCPtr(NumSteerCommands), SteerCommands, SteerCmdParams);
  }

  public static int Emit_start(int IOType, int SeqNum, SWIGTYPE_p_int IOHandle) {
    return ReG_SteerJNI.Emit_start(IOType, SeqNum, SWIGTYPE_p_int.getCPtr(IOHandle));
  }

  public static int Emit_start_blocking(int IOType, int SeqNum, SWIGTYPE_p_int IOHandle, float TimeOut) {
    return ReG_SteerJNI.Emit_start_blocking(IOType, SeqNum, SWIGTYPE_p_int.getCPtr(IOHandle), TimeOut);
  }

  public static int Emit_data_slice(int IOHandle, Object pDataIN) {
    return ReG_SteerJNI.Emit_data_slice(IOHandle, pDataIN);
  }

  public static int Emit_stop(SWIGTYPE_p_int IOHandleINOUT) {
    return ReG_SteerJNI.Emit_stop(SWIGTYPE_p_int.getCPtr(IOHandleINOUT));
  }

  public static int Consume_start(int IOType, SWIGTYPE_p_int IOHandle) {
    return ReG_SteerJNI.Consume_start(IOType, SWIGTYPE_p_int.getCPtr(IOHandle));
  }

  public static int Consume_start_blocking(int IOType, SWIGTYPE_p_int IOHandle, float TimeOut) {
    return ReG_SteerJNI.Consume_start_blocking(IOType, SWIGTYPE_p_int.getCPtr(IOHandle), TimeOut);
  }

  public static int Consume_data_slice_header(int IOTypeIndex, SWIGTYPE_p_int DataType, SWIGTYPE_p_int DataCount) {
    return ReG_SteerJNI.Consume_data_slice_header(IOTypeIndex, SWIGTYPE_p_int.getCPtr(DataType), SWIGTYPE_p_int.getCPtr(DataCount));
  }

  public static int Consume_stop(SWIGTYPE_p_int IOHandleINOUT) {
    return ReG_SteerJNI.Consume_stop(SWIGTYPE_p_int.getCPtr(IOHandleINOUT));
  }

  public static int Steering_finalize() {
    return ReG_SteerJNI.Steering_finalize();
  }

  public static int Sizeof(int type) {
    return ReG_SteerJNI.Sizeof(type);
  }

  public static int Steerer_initialize() {
    return ReG_SteerJNI.Steerer_initialize();
  }

  public static int Steerer_finalize() {
    return ReG_SteerJNI.Steerer_finalize();
  }

  public static int Get_sim_list(SWIGTYPE_p_int nSims, String[] simName, String[] simGSH) {
    return ReG_SteerJNI.Get_sim_list(SWIGTYPE_p_int.getCPtr(nSims), simName, simGSH);
  }

  public static int Sim_attach(String SimID, SWIGTYPE_p_int SimHandle) {
    return ReG_SteerJNI.Sim_attach(SimID, SWIGTYPE_p_int.getCPtr(SimHandle));
  }

  public static int Sim_attach_secure(String SimID, Object secIn, SWIGTYPE_p_int SimHandle) {
    return ReG_SteerJNI.Sim_attach_secure(SimID, secIn, SWIGTYPE_p_int.getCPtr(SimHandle));
  }

  public static int Sim_detach(SWIGTYPE_p_int SimHandle) {
    return ReG_SteerJNI.Sim_detach(SWIGTYPE_p_int.getCPtr(SimHandle));
  }

  public static int Delete_sim_table_entry(SWIGTYPE_p_int SimHandle) {
    return ReG_SteerJNI.Delete_sim_table_entry(SWIGTYPE_p_int.getCPtr(SimHandle));
  }

  public static int Consume_param_defs(int SimHandle) {
    return ReG_SteerJNI.Consume_param_defs(SimHandle);
  }

  public static int Get_param_number(int sim_handle, int steerable, SWIGTYPE_p_int num_params) {
    return ReG_SteerJNI.Get_param_number(sim_handle, steerable, SWIGTYPE_p_int.getCPtr(num_params));
  }

  public static int Set_param_values(int sim_handle, int num_params, int[] handles, String[] vals) {
    return ReG_SteerJNI.Set_param_values(sim_handle, num_params, handles, vals);
  }

  public static int Consume_IOType_defs(int SimHandle) {
    return ReG_SteerJNI.Consume_IOType_defs(SimHandle);
  }

  public static int Get_iotype_number(int sim_handle, SWIGTYPE_p_int num_iotypes) {
    return ReG_SteerJNI.Get_iotype_number(sim_handle, SWIGTYPE_p_int.getCPtr(num_iotypes));
  }

  public static int Get_iotypes(int sim_handle, int num_iotypes, int[] io_handles, String[] io_labels, int[] io_types, int[] io_freqs) {
    return ReG_SteerJNI.Get_iotypes(sim_handle, num_iotypes, io_handles, io_labels, io_types, io_freqs);
  }

  public static int Consume_ChkType_defs(int SimHandle) {
    return ReG_SteerJNI.Consume_ChkType_defs(SimHandle);
  }

  public static int Get_chktype_number(int sim_handle, SWIGTYPE_p_int num_chktypes) {
    return ReG_SteerJNI.Get_chktype_number(sim_handle, SWIGTYPE_p_int.getCPtr(num_chktypes));
  }

  public static int Get_chktypes(int sim_handle, int num_chktypes, int[] chk_handles, String[] chk_labels, int[] chk_types, int[] chk_freqs) {
    return ReG_SteerJNI.Get_chktypes(sim_handle, num_chktypes, chk_handles, chk_labels, chk_types, chk_freqs);
  }

  public static int Get_supp_cmd_number(int sim_handle, SWIGTYPE_p_int num_cmds) {
    return ReG_SteerJNI.Get_supp_cmd_number(sim_handle, SWIGTYPE_p_int.getCPtr(num_cmds));
  }

  public static int Get_supp_cmds(int sim_handle, int num_cmds, int[] cmd_ids) {
    return ReG_SteerJNI.Get_supp_cmds(sim_handle, num_cmds, cmd_ids);
  }

  public static int Emit_stop_cmd(int SimHandle) {
    return ReG_SteerJNI.Emit_stop_cmd(SimHandle);
  }

  public static int Emit_pause_cmd(int SimHandle) {
    return ReG_SteerJNI.Emit_pause_cmd(SimHandle);
  }

  public static int Emit_resume_cmd(int SimHandle) {
    return ReG_SteerJNI.Emit_resume_cmd(SimHandle);
  }

  public static int Emit_retrieve_param_log_cmd(int SimHandle, int ParamHandle) {
    return ReG_SteerJNI.Emit_retrieve_param_log_cmd(SimHandle, ParamHandle);
  }

  public static int Get_next_message(SWIGTYPE_p_int SimHandle, SWIGTYPE_p_int msg_type) {
    return ReG_SteerJNI.Get_next_message(SWIGTYPE_p_int.getCPtr(SimHandle), SWIGTYPE_p_int.getCPtr(msg_type));
  }

  public static int Emit_control(int SimHandle, int NumCommands, int[] SysCommands, String[] SysCmdParams) {
    return ReG_SteerJNI.Emit_control(SimHandle, NumCommands, SysCommands, SysCmdParams);
  }

  public static int Consume_status(int SimHandle, SWIGTYPE_p_int SeqNum, SWIGTYPE_p_int NumCmds, int[] Commands) {
    return ReG_SteerJNI.Consume_status(SimHandle, SWIGTYPE_p_int.getCPtr(SeqNum), SWIGTYPE_p_int.getCPtr(NumCmds), Commands);
  }

  public static Object Consume_data_slice_j(int IOTypeIndex, int DataType, int Count) {
    return ReG_SteerJNI.Consume_data_slice_j(IOTypeIndex, DataType, Count);
  }

  public static Object[] Get_param_values_j(int sim_handle, int steerable, int num_params) {
    return ReG_SteerJNI.Get_param_values_j(sim_handle, steerable, num_params);
  }

  public static Object Get_security_config_j(String configFile) {
    return ReG_SteerJNI.Get_security_config_j(configFile);
  }

  public static Object[] Get_registry_entries_secure_j(String registryGSH, Object secIn) {
    return ReG_SteerJNI.Get_registry_entries_secure_j(registryGSH, secIn);
  }

  public static Object[] Get_registry_entries_filtered_secure_j(String registryGSH, Object secIn, String pattern) {
    return ReG_SteerJNI.Get_registry_entries_filtered_secure_j(registryGSH, secIn, pattern);
  }

}
